###############
## Variables ##
###############

export TERM=xterm-256color
export DOTFILES="$HOME/.dotfiles"

[[ ! -f $DOTFILES/shell/env.zsh ]] || source $DOTFILES/shell/env.zsh

# Platform Specific
platform=$(uname)
if [ "$platform" = "Darwin" ]; then
  [[ ! -f $DOTFILES/shell/macos.zsh ]] || source $DOTFILES/shell/macos.zsh
else
  [[ ! -f $DOTFILES/shell/linux.zsh ]] || source $DOTFILES/shell/linux.zsh
fi

############
## ALIAS' ##
############

[[ ! -f $DOTFILES/shell/alias.zsh ]] || source $DOTFILES/shell/alias.zsh

##############
## ANTIBODY ##
##############

if ! type "antibody" &> /dev/null; then
  $DOTFILES/shell/get_antibody.sh -b $HOME/.local/bin
fi

source <(antibody init)
antibody bundle <<BUNDLE
ohmyzsh/ohmyzsh
ohmyzsh/ohmyzsh path:plugins/z
ohmyzsh/ohmyzsh path:plugins/fzf
ohmyzsh/ohmyzsh path:plugins/sudo
ohmyzsh/ohmyzsh path:plugins/docker
ohmyzsh/ohmyzsh path:plugins/docker-compose
ohmyzsh/ohmyzsh path:plugins/kubectl
zsh-users/zsh-autosuggestions
zsh-users/zsh-syntax-highlighting
zsh-users/zsh-completions
BUNDLE

if type "starship" &> /dev/null; then
  eval "$(starship init zsh)"
fi

# romkatv/powerlevel10k
###############

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#########
## NIX ##
#########

if [ -e $HOME/.nix-profile/etc/profile.d/nix.sh ]; then
  source $HOME/.nix-profile/etc/profile.d/nix.sh;
  source $HOME/.dotfiles/shell/nix.zsh
fi

if [ -e /nix/var/nix/profiles/default/etc/profile.d/nix.sh ]; then
  source /nix/var/nix/profiles/default/etc/profile.d/nix.sh
  source $HOME/.dotfiles/shell/nix.zsh
fi

##########
## ASDF ##
##########

source $HOME/.asdf/asdf.sh

###############

# from zsh configuration script
HISTFILE=~/.histfile
HISTSIZE=100000
SAVEHIST=100000
setopt autocd extendedglob notify
bindkey -e
zstyle :compinstall filename "$HOME/.zshrc"

# append completions to fpath
fpath=(${ASDF_DIR}/completions $fpath)

# auto complete for ani
[[ -f ~/.config/ani/ani.conf ]] && mkdir -p ${fpath[1]} && touch "${fpath[1]}/_ani" && ani gen completion zsh > "${fpath[1]}/_ani"

# initialise completions with ZSH's compinit
autoload -U +X bashcompinit && bashcompinit
autoload -Uz compinit
compinit

if type kitty &> /dev/null; then
    kitty + complete setup zsh | source /dev/stdin
fi

# zsh-autosuggestion color highlighting and key bindings
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#ff5f00"
bindkey '^E' autosuggest-accept
bindkey '^ ' forward-word

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

###############
## Functions ##
###############

[ -f $DOTFILES/shell/functions.zsh ] && source $DOTFILES/shell/functions.zsh 

############

source $HOME/.zshrc.local

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
